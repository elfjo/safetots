{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/_legacy/workers/locale-worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_this","this","self","__awaiter","Promise","resolve","reject","req","XMLHttpRequest","onreadystatechange","readyState","status","Error","responseText","JSON","parse","open","send","then","data","promises","items","forEach","item","push","file","match","postMessage","fetchSingleLocale","all","close","catch","e"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,s4CClFAC,EAAAC,MAWA,SAAEC,GA4BGC,EAAAH,OAAA,8CACG,SAAO,IAAII,QACP,SAACC,EAASC,GACN,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,mBAAqB,WACE,IAAnBF,EAAIG,aACe,MAAfH,EAAII,QACJL,EAAO,IAAIM,MAAML,EAAIM,eAEzBR,EAAQS,KAAKC,MAAMR,EAAIM,iBAG/BN,EAAIS,KACA,MACA,gHAEJT,EAAIU,KAAK,QAGZC,KAAK,SAAAC,GACF,IAAMC,EAA+B,GACrCD,EAAKE,MAAMC,QAAQ,SAAAC,GACfH,EAASI,KAjDzB,SAAiCC,oEAC7B,SAAO,IAAIrB,QACP,SAACC,EAASC,GACN,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,mBAAqB,WACrB,GAAuB,IAAnBF,EAAIG,WAAkB,CACH,MAAfH,EAAII,QACJL,EAAO,IAAIM,MAAML,EAAIM,eAEzB,IAAMa,EAAQD,EAAKC,MAAM,oBACzB,IAAKA,IAAUA,EAAM,GACjB,OAAOrB,IAEX,IAAMd,EAAMmC,EAAM,GAClBxB,EAAKyB,YAAY,CAACpC,EAAKgB,EAAIM,eAC3BR,MAGRE,EAAIS,KACA,MACA,4EAA4ES,GAEhFlB,EAAIU,KAAK,aA2BSW,CAAkBL,EAAKhD,SAEzC6B,QAAQyB,IAAIT,GAAUF,KAAK,WACvBhB,EAAKyB,YAAY,CAAC,SAClBzB,EAAK4B,YAGZC,MAAM,SAAAC,GAAK,OAAAA,SAzDxB,CA2DQ9B","file":"bundle/workers/locale-worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 168);\n","interface GithubItemDescriptor {\n    name: string;\n    [k: string]: string;\n}\n\ninterface GithubContentsResponse {\n    total_count: number;\n    incomplete_results: boolean;\n    items: GithubItemDescriptor[];\n}\n\n((self: DedicatedWorkerGlobalScope): void => {\n    async function fetchSingleLocale(file: string): Promise<{}> {\n        return new Promise<{}>(\n            (resolve, reject): void => {\n                const req = new XMLHttpRequest();\n                req.onreadystatechange = (): void => {\n                    if (req.readyState === 4) {\n                        if (req.status !== 200) {\n                            reject(new Error(req.responseText));\n                        }\n                        const match = file.match(/locales-(.+).xml/);\n                        if (!match || !match[1]) {\n                            return resolve();\n                        }\n                        const key = match[1];\n                        self.postMessage([key, req.responseText]);\n                        resolve();\n                    }\n                };\n                req.open(\n                    'GET',\n                    `https://raw.githubusercontent.com/citation-style-language/locales/master/${file}`,\n                );\n                req.send(null);\n            },\n        );\n    }\n\n    (async (): Promise<void> => {\n        return new Promise<GithubContentsResponse>(\n            (resolve, reject): void => {\n                const req = new XMLHttpRequest();\n                req.onreadystatechange = (): void => {\n                    if (req.readyState === 4) {\n                        if (req.status !== 200) {\n                            reject(new Error(req.responseText));\n                        }\n                        resolve(JSON.parse(req.responseText));\n                    }\n                };\n                req.open(\n                    'GET',\n                    'https://api.github.com/search/code?q=repo%3Acitation-style-language%2Flocales%20extension%3Axml&per_page=100',\n                );\n                req.send(null);\n            },\n        )\n            .then(data => {\n                const promises: Array<Promise<{}>> = [];\n                data.items.forEach(item => {\n                    promises.push(fetchSingleLocale(item.name));\n                });\n                Promise.all(promises).then(() => {\n                    self.postMessage(['done']);\n                    self.close();\n                });\n            })\n            .catch(e => e);\n    })();\n})(<any>self);\n"],"sourceRoot":""}